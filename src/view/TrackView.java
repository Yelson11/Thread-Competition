/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import model.ThreadRunner;
import model.CONSTANTS;

/**
 *
 * @author Yelson
 */
public class TrackView extends javax.swing.JPanel implements Runnable{

    /**
     * Creates new form TrackView
     */
    Image background;
    int x = getWidth()/2; //La mitad del lienzo
    int y = getWidth()/2;
    Thread hilo;
    ThreadRunner runner;
    ThreadRunner runner2;
    ThreadRunner runner3;
    
    public TrackView() {
        initComponents();
        
        hilo = new Thread(this);
        runner = new ThreadRunner(20,10,1);
        runner2 = new ThreadRunner(100,100,2);
        runner3 = new ThreadRunner(190,270,3);
        try{
            background = ImageIO.read(new File("src/images/autopista.png"));
        }catch(IOException e){
            e.printStackTrace();
        }
    }

    public void paint(Graphics g){
        //Pinta la imagen de fondo
        g.drawImage(background, 0, 0, this);
        
        //Aquí tengo que crear una funcion que haga todas las que se necesiten
        try{
            paintFigure(g, runner);   
        }catch(Exception e){
            e.printStackTrace();
        }
        g.setColor(Color.red);
        g.fillRect(runner2.getX(), runner2.getY(), 50, 25);
        g.setColor(Color.green);
        g.fillOval(runner3.getX(), runner3.getY(), 40, 25);
    }
    
    public void paintFigure(Graphics g, ThreadRunner t) throws IOException{
        if (t.f == true){
            g.setColor(Color.blue);
            g.fillOval(t.getX(), t.getY(), 30, 30);
        }else{
            Image image = ImageIO.read(new File("src/images/rojo.png"));
            Image imageScaled = image.getScaledInstance(20, 40, Image.SCALE_DEFAULT);
            g.drawImage(imageScaled, t.getX(), t.getY(), this);
        }
    }
    
    public void create(){
        hilo.start();
    }
    
    public void interrput(){
        hilo.suspend();
    }
    
    public void continueThread(){
        hilo.resume();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    //Toda la animación que quiera
    @Override
    public void run(){
        runner.start();
        runner2.start();
        runner3.start();
        while(true){
            try {
                Thread.sleep(5);
            } catch (InterruptedException ex) {
                Logger.getLogger(TrackView.class.getName()).log(Level.SEVERE, null, ex);
            }
            repaint();   
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
